
jobs:
- job: DeepSpeed_Tests
  timeoutInMinutes: 360
  pool:
    name: 'DS_testing'

  strategy:
    matrix:
      PyTorch12-CUDA100:
        python.version: '3.6'
        cuda.version: '10.0'
        pytorch.version: '1.2'
        runmodeltests: false
      PyTorch15-CUDA101:
        python.version: '3.7'
        cuda.version: '10.1'
        pytorch.version: '1.5'
        runmodeltests: true
      #PyTorch15-CUDA102:
      #  python.version: '3.7'
      #  cuda.version: '10.2'
      #  pytorch.version: '1.5'
      #  runmodeltests: true

  variables:
    conda_env: 'ds_test_py$(python.version)_cuda$(cuda.version)_pytorch$(pytorch.version)'

  steps:
    # Unfortunately nvidia's nvcc_linux-64=<version> seems to install 10.1 regardless?
    # Most of this complexity is a workaround to get the compiler toolchain to match the
    # cudatoolkit runtime
  - script: |
      conda create --force --yes -n $(conda_env) python=$(python.version) cudatoolkit=$(cuda.version)
      source activate $(conda_env)
      conda install --yes -c pytorch pytorch=$(pytorch.version) cudatoolkit=$(cuda.version)
      conda install --yes conda
      conda install --yes gxx_linux-64
      if [[ $(cuda.version) != "10.2" ]]; then conda install --yes -c conda-forge cudatoolkit-dev=$(cuda.version) ; fi
    displayName: 'Setup environment python=$(python.version) pytorch=$(pytorch.version) cuda=$(cuda.version)'

  - script: |
      source activate $(conda_env)
      python --version
      which nvcc
      nvcc --version
      python -c "import torch; print('torch:', torch.__version__, 'cuda available:', torch.cuda.is_available())"
    displayName: 'Show environment'

  - script: |
      source activate $(conda_env)
      ./install.sh
      python basic_install_test.py
    displayName: 'Install DeepSpeed'

  - script: |
      source activate $(conda_env)
      pytest --forked --verbose tests/unit/
    displayName: 'Unit tests'

  - script: |
      source activate $(conda_env)
      ln -s /data/Megatron-LM/data DeepSpeedExamples/Megatron-LM/
      pip install -r DeepSpeedExamples/Megatron-LM/requirements.txt
      cd tests/model/
      rm -rf BingBertSquad/baseline
      rm -rf Megatron_GPT2/baseline
      pytest -s run_sanity_check.py
    condition: eq(variables['runmodeltests'], true)
    displayName: 'Model tests'

   #BingBertSquad logs
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: '$(Build.SourcesDirectory)/tests/model/BingBertSquad/test/'
      artifactName: BingBertSquad_logs
    displayName: 'BingBertSquad log uploads'
    condition: eq(variables['runmodeltests'], true)


- job: Code_Quality_Checks
  pool:
    name: 'DS_testing'
  variables:
    conda_env: 'ds_codetest'

  steps:
  - script: |
      conda create --force --yes -n $(conda_env) python=3.7
      source activate $(conda_env)
    displayName: 'Create code test environment'

  - script: |
      source activate $(conda_env)
      pip install pre-commit
      pre-commit run --all-files
    displayName: 'Formatting checks'

  - script: |
      source activate $(conda_env)
      pip install pylint
      pylint --exit-zero deepspeed/
    displayName: 'Code linter'
